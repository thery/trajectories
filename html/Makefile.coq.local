post-all::
	$(MAKE) -f $(SELF) Add.mli SmoothTrajectories.mli
clean::
	rm -f Add.mli

Add.mli : add.vo
	echo "mli"
post-all::
		$(MAKE) -f $(SELF) Add.ml
clean::
		rm -f Add.ml
Add.ml : add.vo
		echo "ml"

post-all::
	$(MAKE) -f $(SELF) Add.cmi SmoothTrajectories.cmi

clean::
	rm -f Add.cmi Add.cmo jAdd.cmi jAdd.cmo SmoothTrajectories.cmi SmoothTrajectories.cmo jSmoothTrajectories.cmi jSmoothTrajectories.cmo

Add.cmi : Add.mli
	ocamlfind ocamlc Add.mli

SmoothTrajectories.cmi : SmoothTrajectories.mli
	ocamlfind ocamlc SmoothTrajectories.mli

post-all::
	$(MAKE) -f $(SELF) jAdd.cmi jSmoothTrajectories.cmi
clean::
	rm -f jAdd.cmi jSmoothTrajectories.cmi

jAdd.cmi :  jAdd.ml
	ocamlfind ocamlc jAdd.mli

jSmoothTrajectories.cmi :  jSmoothTrajectories.ml
	ocamlfind ocamlc jSmoothTrajectories.mli

post-all::
	$(MAKE) -f $(SELF) Add.bytes SmoothTrajectories.bytes
clean::
	rm -f Add.bytes SmoothTrajectories.bytes

Add.bytes :  jAdd.cmi jAdd.ml Add.ml Add.cmi
	ocamlfind ocamlc -package js_of_ocaml -package js_of_ocaml-ppx -linkpkg -o Add.bytes Add.ml jAdd.ml

SmoothTrajectories.bytes :  jSmoothTrajectories.cmi jSmoothTrajectories.ml SmoothTrajectories.ml SmoothTrajectories.cmi
	ocamlfind ocamlc -package js_of_ocaml -package js_of_ocaml-ppx -linkpkg -o SmoothTrajectories.bytes SmoothTrajectories.ml jSmoothTrajectories.ml

post-all::
	$(MAKE) -f $(SELF) Add.js SmoothTrajectories.js
clean::
	rm -f Add.js SmoothTrajectories.js

Add.js :  Add.bytes
	js_of_ocaml Add.bytes

SmoothTrajectories.js :  SmoothTrajectories.bytes
	js_of_ocaml SmoothTrajectories.bytes
